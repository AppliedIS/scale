---
# init-examples/tasks/main.yml
# configure workspaces

# deploy the landsat jobs
- name: Deploy the landsat-parse job
  tags: init-examples
  command: /scale/bin/goscale jobs deploy -p -i geoint/parse-landsat
  become: true
  environment:
    DOCKER_REGISTRY: "{{ example_docker_registry | replace('/', '') }}"
    SCALE_URL: 'http://{{ scale_host }}/api/v3'

- name: Deploy the landsat-ndwi job
  tags: init-examples
  command: /scale/bin/goscale jobs deploy -p -i geoint/landsat-ndwi
  become: true
  environment:
    DOCKER_REGISTRY: "{{ example_docker_registry | replace('/', '') }}"
    SCALE_URL: 'http://{{ scale_host }}/api/v3'

- name: Deploy the landsat-tiles job
  tags: init-examples
  command: /scale/bin/goscale jobs deploy -p -i geoint/landsat-tiles
  become: true
  environment:
    DOCKER_REGISTRY: "{{ example_docker_registry | replace('/', '') }}"
    SCALE_URL: 'http://{{ scale_host }}/api/v3'

# deploy the landsat recipe
- name: Deploy the landsat-tiles job
  tags: init-examples
  uri:
    url: "http://{{ scale_host }}/api/v3/recipe-types/"
    method: POST
    status_code: 201
    body_format: json
    body: "{{ lookup('file', 'landsat_recipe.json') | to_json }}"

# configure the landsat strike
- name: Configure parse-landsat strike
  tags: init-examples
  template: src=parse-landsat-strike.yml.j2 dest='/tmp/parse-landsat-strike.yml'

# currently no interface to see if a strike exists so in order to prevent a
# playbook failure on the second execution, need to ingnore_errors: true
- name: Deploy the parse-binary strike
  tags: [ init-examples, example-database ]
  command: /scale/bin/goscale strike create -d /tmp/parse-landsat-strike.yml
  ignore_errors: yes
  become: true
  environment:
    DOCKER_REGISTRY: "{{ example_docker_registry | replace('/', '') }}"
    SCALE_URL: 'http://{{ mesos_master_ip }}/api/v3'

# deploy other jobs
- name: Deploy the binary-parse job
  tags: init-examples
  command: /scale/bin/goscale jobs deploy -p -i geoint/binary-parse
  become: true
  environment:
    DOCKER_REGISTRY: "{{ example_docker_registry | replace('/', '') }}"
    SCALE_URL: 'http://{{ scale_host }}/api/v3'

- name: Deploy the ace job
  tags: init-examples
  command: /scale/bin/goscale jobs deploy -p -i geoint/ace
  become: true
  environment:
    DOCKER_REGISTRY: "{{ example_docker_registry | replace('/', '') }}"
    SCALE_URL: 'http://{{ scale_host }}/api/v3'

- name: Deploy the jpl-signatures job
  tags: init-examples
  command: /scale/bin/goscale jobs deploy -p -i geoint/jpl-signatures
  become: true
  environment:
    DOCKER_REGISTRY: "{{ example_docker_registry | replace('/', '') }}"
    SCALE_URL: 'http://{{ scale_host }}/api/v3'

- name: Deploy the pca job
  tags: init-examples
  command: /scale/bin/goscale jobs deploy -p -i geoint/pca
  become: true
  environment:
    DOCKER_REGISTRY: "{{ example_docker_registry | replace('/', '') }}"
    SCALE_URL: 'http://{{ scale_host }}/api/v3'

- name: Deploy the tad job
  tags: init-examples
  command: /scale/bin/goscale jobs deploy -p -i geoint/tad
  become: true
  environment:
    DOCKER_REGISTRY: "{{ example_docker_registry | replace('/', '') }}"
    SCALE_URL: 'http://{{ scale_host }}/api/v3'

- name: Deploy the vash job
  tags: init-examples
  command: /scale/bin/goscale jobs deploy -p -i geoint/vash
  become: true
  environment:
    DOCKER_REGISTRY: "{{ example_docker_registry | replace('/', '') }}"
    SCALE_URL: 'http://{{ scale_host }}/api/v3'

# configure the binary strike
- name: Configure parse-binary strike
  tags: [ init-examples, example-database ]
  template: src=parse-binary-strike.yml.j2 dest='/tmp/parse-binary-strike.yml'

# currently no interface to see if a strike exists so in order to prevent a
# playbook failure on the second execution, need to ingnore_errors: true
- name: Deploy the parse-binary strike
  tags: [ init-examples, example-database ]
  command: /scale/bin/goscale strike create -d /tmp/parse-binary-strike.yml chdir="{{ scale_build_root }}/dockerfiles/examples/binary-parse"
  ignore_errors: yes
  become: true
  environment:
    DOCKER_REGISTRY: "{{ example_docker_registry | replace('/', '') }}"
    SCALE_URL: 'http://{{ mesos_master_ip }}/api/v3'

# support infrastructure
- name: Static example product web server
  tags: init-examples
  docker:
    name: example-web
    docker_api_version: '{{ docker_api_version }}'
    image: '{{ external_docker_registry }}httpd'
    state: reloaded
    restart_policy: always
    volumes:
      - '/exports:/usr/local/apache2/htdocs'
    ports:
      - '8080:80'
  become: true

- name: Example file uploader
  tags:
    - init-examples
    - file-upload
  docker:
    name: file-uploader
    docker_api_version: '{{ docker_api_version }}'
    image: '{{ external_docker_registry }}bigdatauniversity/file-upload'
    state: reloaded
    restart_policy: always
    env:
      SITE_NAME: 'Scale Landsat Data Ingest'
      SITE_PASSWORD: 'admin'
    volumes:
      - '/exports/ingest/landsat:/var/www/upload/server/php/files'
    ports:
      - '8081:80'
  become: true
